{"version":3,"sources":["Table.jsx","InfoBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Table","useState","data","setDtate","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","scope","map","currelem","ind","state","confirmed","recovered","deaths","active","lastupdatedtime","InfoBox","cases","title","total","App","CountryInfo","setCountryInfo","newData","getCountries","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAuDeA,EArDD,WAEV,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,sEACCC,MAAM,0CADP,cACXC,EADW,gBAEQA,EAAIC,OAFZ,OAEXC,EAFW,OAGjBC,QAAQC,IAAIF,EAAWG,WACvBT,EAASM,EAAWG,WAJH,2CAAH,qDAWlB,OAJAC,qBAAU,WACNT,MACD,IAGC,qBAAKU,UAAU,mBAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,0BAGR,gCAGQb,EAAKc,KAAI,SAACC,EAAUC,GAChB,OACI,+BACI,oBAAIJ,UAAU,aAAd,SAA4BG,EAASE,QACrC,6BAAKF,EAASG,YACd,6BAAKH,EAASI,YACd,6BAAKJ,EAASK,SACd,6BAAKL,EAASM,SACd,6BAAKN,EAASO,oBANTN,cCnB1BO,EAdC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC7B,OACI,mCACI,qBAAKd,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4Ba,IAC5B,oBAAIb,UAAU,YAAd,SAA2BY,IAC3B,4BAAIE,YCgCTC,MApCf,WACA,MAAsC5B,mBAAS,IAA/C,mBAAO6B,EAAP,KAAoBC,EAApB,KAgBE,OAdFlB,qBAAU,YACS,uCAAG,8BAAAR,EAAA,sEACAC,MAAM,sCADN,cACZC,EADY,gBAEIA,EAAIC,OAFR,OAEZwB,EAFY,OAGlBtB,QAAQC,IAAIqB,GAEZD,EAAeC,GALG,2CAAH,qDAQlBC,KAEE,IAIC,sBAAKnB,UAAU,MAAf,UACI,wDAEA,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CAASa,MAAM,QAAQD,MAAOI,EAAYI,WAAYN,MAAOE,EAAYJ,QACzE,cAAC,EAAD,CAASC,MAAM,YAAYD,MAAOI,EAAYK,eAAgBP,MAAOE,EAAYT,YACjF,cAAC,EAAD,CAASM,MAAM,SAASD,MAAOI,EAAYM,YAAaR,MAAOE,EAAYR,YAG7E,wDACA,qBAAKR,UAAU,iBAAf,SACA,cAAC,EAAD,UCtBOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63bc8d41.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Table = () => {\r\n\r\n    const [data, setDtate] = useState([])\r\n\r\n    const getCovidData = async () => {\r\n        const res = await fetch('https://api.covid19india.org/data.json')\r\n        const actualData = await res.json()\r\n        console.log(actualData.statewise)\r\n        setDtate(actualData.statewise)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCovidData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table\">\r\n                <thead className=\"table-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">State</th>\r\n                        <th scope=\"col\">Confirmed</th>\r\n                        <th scope=\"col\">Recovered</th>\r\n                        <th scope=\"col\">Deaths</th>\r\n                        <th scope=\"col\">Active</th>\r\n                        <th scope=\"col\">Updated</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {\r\n                        data.map((currelem, ind) => {\r\n                            return (\r\n                                <tr key={ind}>\r\n                                    <th className='text-start'>{currelem.state}</th>\r\n                                    <td>{currelem.confirmed}</td>\r\n                                    <td>{currelem.recovered}</td>\r\n                                    <td>{currelem.deaths}</td>\r\n                                    <td>{currelem.active}</td>\r\n                                    <td>{currelem.lastupdatedtime}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\n\r\nconst InfoBox = ({ cases, title, total }) => {\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <h2 className=\"card-text\">{cases}</h2>\r\n                    <p>{total}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import {useEffect, useState} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';import './App.css';\nimport Table from './Table'\nimport InfoBox from './InfoBox'\n\nfunction App() {\nconst [CountryInfo, setCountryInfo] = useState([])\n\nuseEffect(() => {\n const getCountries = async() => {\n    const res = await fetch(\"https://disease.sh/v3/covid-19/all\");\n    const newData = await res.json()\n    console.log(newData)\n\n    setCountryInfo(newData)\n }\n\n getCountries()\n//  https://disease.sh/v3/covid-19/all\n}, [])\n\n\n  return (\n    <div className=\"App\">\n        <h1>World Covid 19 Tracker</h1>\n\n        <div className=\"stats mb-5\">\n          <InfoBox title=\"Cases\" cases={CountryInfo.todayCases} total={CountryInfo.cases}/>\n          <InfoBox title=\"Recovered\" cases={CountryInfo.todayRecovered} total={CountryInfo.recovered}/>\n          <InfoBox title=\"Deaths\" cases={CountryInfo.todayDeaths} total={CountryInfo.deaths}/>\n        </div>\n\n        <h1>India Covid 19 Tracker</h1>\n        <div className=\"container mt-5\">\n        <Table />\n        </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}